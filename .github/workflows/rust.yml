name: Rust

on:
  push:
    branches: [ "develop" ]
  pull_request:
    branches: [ "develop" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  assemble:
    runs-on: ubuntu-latest
    env:
      cache-key-rust: rust-cache
      cache-key-build: build-cache
    steps:
      - uses: actions/checkout@v3
      - name: Restore Rust Cache
        id: cache-restore-rust
        uses: actions/cache/restore@v3
        with:
          key: ${{ env.cache-key-rust }}
          path: |
            target
      - name: Restore Build Cache
        id: cache-restore-build
        uses: actions/cache/restore@v3
        with:
          key: ${{ env.cache-key-build }}
          path: |
            build-cache
      - name: Run
        run: cargo run --bin=assemble-all
      - name: Delete Previous Rust Cache
        if: ${{ steps.cache-restore-rust.outputs.cache-hit }}
        continue-on-error: true
        run: |
          gh extension install actions/gh-actions-cache
          gh actions-cache delete "${{ env.cache-key-rust }}" --confirm
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Delete Previous Build Cache
        if: ${{ steps.cache-restore-build.outputs.cache-hit }}
        continue-on-error: true
        run: |
          gh extension install actions/gh-actions-cache
          gh actions-cache delete "${{ env.cache-key-build }}" --confirm
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Save Rust Cache
        uses: actions/cache/save@v3
        with:
          key: ${{ env.cache-key-rust }}
          path: |
            target
      - name: Save Build Cache
        uses: actions/cache/save@v3
        with:
          key: ${{ env.cache-key-build }}
          path: |
            build-cache
  depgraph:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run
        run: cargo run --bin=depgraph | tee deps.dot
      - name: Setup Graphviz
        uses: ts-graphviz/setup-graphviz@v1
      - name: Generate PNG
        run: dot deps.dot -Tpng > deps.png
      - name: Generate SVG
        run: dot deps.dot -Tsvg > deps.svg
      - uses: hkusu/s3-upload-action@v2
        name: Upload PNG to S3
        if: github.event_name != 'pull_request'
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-west-2'
          aws-bucket: ${{ secrets.AWS_BUCKET }}
          file-path: 'deps.png'
          destination-dir: '/'
          bucket-root: '/'
          content-type: 'image/png'
      - uses: hkusu/s3-upload-action@v2
        name: Upload SVG to S3
        if: github.event_name != 'pull_request'
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-west-2'
          aws-bucket: ${{ secrets.AWS_BUCKET }}
          file-path: 'deps.svg'
          destination-dir: '/'
          bucket-root: '/'
          content-type: 'image/svg+xml'
